
/* to tell the linker the program begin from __start label in cstartup.s, thus do not treat it as a unused symbol */
ENTRY(__start)

SECTIONS
{
	. = 0x0;
		.vectors :
		{
		*(.vectors)
		*(.vectors.*)	/* MUST as follows, when compile with -ffunction-sections -fdata-sections, session name may changed */
		}
		. = ALIGN (4);
		.ram_code : 
		{
		_start_ram_code_ = ABSOLUTE(.);
		*(.ram_code)
		*(.ram_code.*)
		. = ALIGN (4);
		_end_ram_code_ = ABSOLUTE(.);
		}
		.text :
		{
		_start_text_ = ABSOLUTE(.); 
		*(.text)
		*(.text.*)
		. = ALIGN (4);
		_end_text_ = ABSOLUTE(.); 
		}
		.rodata :
		{
		_start_rodata_ = ABSOLUTE(.);
		*(.rodata)
		*(.rodata.*)
		. = ALIGN (4);
		_end_rodata_ = ABSOLUTE(.);
		}
	_dstored_  = ABSOLUTE(.);

/*	Use Flash: */
/*	. = _end_ram_code_ + 0x808000;	*/
/*	Use SRAM: */
	. = _dstored_ + 0x808000;
		.data :
		AT (_dstored_)
		{
		_start_data_ = ABSOLUTE(.);
		*(.data);
		*(.data.*);
		. = ALIGN (4);
		_end_data_ = ABSOLUTE(.);
		}

	. = ALIGN (0x100);
	_ictag_start_ = ABSOLUTE(.);
	. = . + 0x100;
	_ictag_end_ = ABSOLUTE(.);
	. = . + 0x800;
	_icdata_end_ = ABSOLUTE(.);

		.bss :
		{
		_start_bss_ = ABSOLUTE(.);
		*(.sbss)
		*(.sbss.*)
		*(.bss)
		*(.bss.*)
		. = ALIGN (4);
		}
	_end_bss_ = ABSOLUTE(.);
	_ramcode_size_ = _dstored_ + _data_size_;
	PROVIDE(_ram_code_size_ = _end_ram_code_ - _start_ram_code_);
	PROVIDE(_text_size_ = _dstored_ - _end_rodata_);  
	PROVIDE(_rodata_size_ = _end_rodata_ - _start_rodata_);
	PROVIDE(_data_size_ = _end_data_ - _start_data_);
/*	PROVIDE(_bin_size_ = _ram_code_size_ + _text_size_ + _rodata_size_ + _data_size_); */
	PROVIDE(_bin_size_ = _dstored_ + _data_size_);

	PROVIDE(_ramcode_size_div_256_ = (_ictag_start_ - 0x808000 + 0xff) / 0x100 );
	PROVIDE(_ramcode_size_div_16_align_256_ = _ramcode_size_div_256_ * 0x10 );
	
}